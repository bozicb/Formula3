
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xab\x18\x04\xdaZ@W\xd7W\x06N\x91\x9aFj\\'
    
_lr_action_items = {'PROPCOPY':([15,],[37,]),'DOTDOT':([108,88,84,107,85,106,87,109,],[-59,102,94,-61,-60,-62,-57,-58,]),'MINUS':([74,99,73,18,34,20,75,46,25,41,26,62,6,91,33,12,96,40,81,70,48,47,19,13,49,83,55,42,95,111,53,103,35,85,39,76,78,77,65,44,51,58,60,112,87,50,80,79,66,24,93,92,59,43,21,52,17,82,23,71,],[46,-48,46,-41,12,-42,-38,12,12,12,46,12,12,-39,-34,12,-56,12,46,-33,12,12,-65,-29,12,46,-47,12,-55,-52,12,-49,12,97,12,-28,46,-27,-31,12,12,-46,-45,-51,100,12,46,46,-30,-35,-50,12,-40,12,-37,12,-32,46,-36,46,]),'PLUS':([74,99,73,18,20,75,26,91,33,96,81,70,19,13,83,55,95,111,103,85,76,78,77,65,58,60,112,87,80,79,66,24,93,59,21,17,82,23,71,],[47,-48,47,-41,-42,-38,47,-39,-34,-56,47,-33,-65,-29,47,-47,-55,-52,-49,98,-28,47,-27,-31,-46,-45,-51,101,47,47,-30,-35,-50,-40,-37,-32,47,-36,47,]),'TIMES':([99,18,20,75,91,33,96,70,19,13,55,95,111,103,76,77,65,58,60,112,66,24,93,59,21,17,23,],[-48,-41,-42,-38,-39,-34,-56,-33,-65,34,-47,-55,-52,-49,34,34,-31,-46,-45,-51,-30,-35,-50,-40,-37,-32,-36,]),'SQUARE_BRA':([27,84,107,85,106,15,38,32,105,37,],[56,96,-61,-60,-62,-43,-44,-43,96,56,]),'TS_ID':([34,46,25,41,62,6,12,40,48,47,49,42,36,53,35,39,44,51,50,92,43,52,],[32,32,32,32,15,15,32,32,32,32,32,32,67,32,32,32,32,32,32,32,32,32,]),'ASSIGN':([74,99,73,18,22,20,75,26,91,33,96,81,70,19,13,83,55,95,111,103,76,78,77,65,14,58,60,112,80,79,66,24,93,104,59,21,17,82,23,71,],[-17,-48,-18,-41,-16,-42,-38,-26,-39,-34,-56,-20,-33,-65,-29,-24,-47,-55,-52,-49,-28,-22,-27,-31,36,-46,-45,-51,-21,-25,-30,-35,-50,-15,-40,-37,-32,-23,-36,-19,]),'EQUALS':([3,],[9,]),'FLOAT':([34,46,25,41,62,6,12,40,48,47,49,42,53,35,39,44,51,50,92,43,52,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'SQUARE_KET':([108,88,110,27,84,107,85,106,87,15,38,32,86,105,109,37,],[-59,103,112,57,95,-61,-60,-62,-57,-43,-44,-43,99,95,-58,57,]),'I':([56,102,],[87,87,]),'EVERY':([5,31,61,90,63,11,],[10,-63,-5,-64,10,-4,]),'ENDGEN':([74,89,99,73,18,22,20,75,26,91,28,33,68,96,81,70,19,13,67,83,55,95,111,103,76,78,77,65,16,14,58,60,112,80,79,66,24,93,104,59,21,17,82,23,71,],[-17,-10,-48,-18,-41,-16,-42,-38,-26,-39,61,-34,-13,-56,-20,-33,-65,-29,-12,-24,-47,-55,-52,-49,-28,-22,-27,-31,-11,-14,-46,-45,-51,-21,-25,-30,-35,-50,-15,-40,-37,-32,-23,-36,-19,]),'NONE':([34,46,25,41,62,6,12,40,48,47,49,42,53,35,39,44,51,50,92,43,52,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'INTEGER':([34,46,25,41,56,62,6,12,40,48,47,49,42,53,101,100,35,39,44,51,50,92,43,52,],[20,20,20,20,86,20,20,20,20,20,20,20,20,20,109,108,20,20,20,20,20,20,20,20,]),'DIVIDE':([99,18,20,75,91,33,96,70,19,13,55,95,111,103,76,77,65,58,60,112,66,24,93,59,21,17,23,],[-48,-41,-42,-38,-39,-34,-56,-33,-65,35,-47,-55,-52,-49,35,35,-31,-46,-45,-51,-30,-35,-50,-40,-37,-32,-36,]),'SERPIPE':([5,31,61,7,90,63,11,],[-3,-63,-5,29,-64,-2,-4,]),'XOR':([74,99,73,18,22,20,75,26,91,33,96,81,70,19,13,83,55,95,111,103,76,78,77,65,58,60,112,80,79,66,24,93,104,59,21,17,82,23,71,],[-17,-48,-18,-41,41,-42,-38,-26,-39,-34,-56,-20,-33,-65,-29,-24,-47,-55,-52,-49,-28,-22,-27,-31,-46,-45,-51,-21,-25,-30,-35,-50,41,-40,-37,-32,-23,-36,-19,]),'GTE':([99,18,20,75,26,91,33,96,70,19,13,55,95,111,103,76,77,65,58,60,112,66,24,93,59,21,17,23,],[-48,-41,-42,-38,48,-39,-34,-56,-33,-65,-29,-47,-55,-52,-49,-28,-27,-31,-46,-45,-51,-30,-35,-50,-40,-37,-32,-36,]),'STRING':([34,46,25,41,62,6,12,40,48,47,49,42,53,35,39,44,51,50,9,92,43,52,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,30,23,23,23,]),'T':([56,57,94,54,],[-53,-54,85,85,]),'AT':([31,],[64,]),'FUNC_OR_ACCESS':([15,32,],[38,38,]),'STARTGEN':([8,4,1,3,30,29,],[-7,-6,6,-8,-9,6,]),'LT':([99,18,20,75,26,91,33,96,70,19,13,55,95,111,103,76,77,65,58,60,112,66,24,93,59,21,17,23,],[-48,-41,-42,-38,50,-39,-34,-56,-33,-65,-29,-47,-55,-52,-49,-28,-27,-31,-46,-45,-51,-30,-35,-50,-40,-37,-32,-36,]),'LTE':([99,18,20,75,26,91,33,96,70,19,13,55,95,111,103,76,77,65,58,60,112,66,24,93,59,21,17,23,],[-48,-41,-42,-38,52,-39,-34,-56,-33,-65,-29,-47,-55,-52,-49,-28,-27,-31,-46,-45,-51,-30,-35,-50,-40,-37,-32,-36,]),'SEMICOLON':([74,89,99,73,18,22,20,75,26,91,28,33,68,96,81,70,19,13,67,83,55,95,111,103,76,78,77,65,16,14,58,60,112,80,79,66,24,93,104,59,21,17,82,23,71,],[-17,-10,-48,-18,-41,-16,-42,-38,-26,-39,62,-34,-13,-56,-20,-33,-65,-29,-12,-24,-47,-55,-52,-49,-28,-22,-27,-31,-11,-14,-46,-45,-51,-21,-25,-30,-35,-50,-15,-40,-37,-32,-23,-36,-19,]),'$end':([5,31,61,7,90,63,2,11,],[-3,-63,-5,-1,-64,-2,0,-4,]),'ROUND_BRA':([34,46,25,41,62,6,12,40,48,47,49,42,53,35,39,44,51,50,15,32,92,43,52,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,39,39,25,25,25,]),'TS_PARAM_ID':([0,8,4,1,3,30,],[3,-7,-6,3,-8,-9,]),'POW':([99,18,69,20,75,91,33,96,70,19,55,95,111,103,65,58,60,112,66,24,93,59,21,17,23,],[-48,-41,40,-42,-38,-39,-34,-56,40,-65,-47,-55,-52,-49,40,-46,-45,-51,40,-35,-50,-40,-37,40,-36,]),'IF':([74,99,73,18,22,20,75,26,91,33,96,81,70,19,13,83,55,95,111,103,76,78,77,65,58,60,112,80,79,66,24,93,59,21,17,82,23,71,],[-17,-48,-18,-41,42,-42,-38,-26,-39,-34,-56,-20,-33,-65,-29,-24,-47,-55,-52,-49,-28,-22,-27,-31,-46,-45,-51,-21,-25,-30,-35,-50,-40,-37,-32,-23,-36,-19,]),'INT_WITH_TIME':([98,97,10,64,],[107,106,31,90,]),'ROUND_KET':([74,99,73,18,22,69,20,75,26,91,33,45,96,81,70,19,13,83,55,95,111,103,76,78,77,65,58,60,112,80,79,66,24,93,104,59,21,17,82,23,71,],[-17,-48,-18,-41,-16,91,-42,-38,-26,-39,-34,75,-56,-20,-33,-65,-29,-24,-47,-55,-52,-49,-28,-22,-27,-31,-46,-45,-51,-21,-25,-30,-35,-50,-15,-40,-37,-32,-23,-36,-19,]),'OR':([74,99,73,18,22,20,75,26,91,33,96,81,70,19,13,83,55,95,111,103,76,78,77,65,58,60,112,80,79,66,24,93,104,59,21,17,82,23,71,],[-17,-48,-18,-41,43,-42,-38,-26,-39,-34,-56,-20,-33,-65,-29,-24,-47,-55,-52,-49,-28,-22,-27,-31,-46,-45,-51,-21,-25,-30,-35,-50,43,-40,-37,-32,-23,-36,-19,]),'GT':([99,18,20,75,26,91,33,96,70,19,13,55,95,111,103,76,77,65,58,60,112,66,24,93,59,21,17,23,],[-48,-41,-42,-38,51,-39,-34,-56,-33,-65,-29,-47,-55,-52,-49,-28,-27,-31,-46,-45,-51,-30,-35,-50,-40,-37,-32,-36,]),'NEQ':([99,18,20,75,26,91,33,96,70,19,13,55,95,111,103,76,77,65,58,60,112,66,24,93,59,21,17,23,],[-48,-41,-42,-38,49,-39,-34,-56,-33,-65,-29,-47,-55,-52,-49,-28,-27,-31,-46,-45,-51,-30,-35,-50,-40,-37,-32,-36,]),'EQ':([99,18,20,75,26,91,33,96,70,19,13,55,95,111,103,76,77,65,58,60,112,66,24,93,59,21,17,23,],[-48,-41,-42,-38,53,-39,-34,-56,-33,-65,-29,-47,-55,-52,-49,-28,-27,-31,-46,-45,-51,-30,-35,-50,-40,-37,-32,-36,]),'AND':([74,99,73,18,22,20,75,26,91,33,96,81,70,19,13,83,55,95,111,103,76,78,77,65,58,60,112,80,79,66,24,93,104,59,21,17,82,23,71,],[-17,-48,-18,-41,44,-42,-38,-26,-39,-34,-56,-20,-33,-65,-29,-24,-47,-55,-52,-49,-28,-22,-27,-31,-46,-45,-51,-21,-25,-30,-35,-50,44,-40,-37,-32,-23,-36,-19,]),'OTHERWISE':([74,99,73,18,22,20,75,26,91,33,96,81,70,19,13,83,55,95,111,103,76,78,77,65,58,60,112,80,79,66,24,93,104,59,21,17,82,23,71,72,],[-17,-48,-18,-41,-16,-42,-38,-26,-39,-34,-56,-20,-33,-65,-29,-24,-47,-55,-52,-49,-28,-22,-27,-31,-46,-45,-51,-21,-25,-30,-35,-50,-15,-40,-37,-32,-23,-36,-19,92,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ts_param_id_list':([0,],[1,]),'mult_expression':([46,25,41,62,6,48,47,49,42,53,44,51,50,92,43,52,],[76,13,13,13,13,13,77,13,13,13,13,13,13,13,13,13,]),'time_interval':([27,37,],[55,55,]),'if_expression':([25,62,6,42,],[45,14,14,72,]),'assign_expression':([62,6,],[89,16,]),'ket':([84,105,],[93,111,]),'expression':([34,46,25,41,62,6,12,40,48,47,49,42,53,35,39,44,51,50,92,43,52,],[65,17,17,17,17,17,33,70,17,17,17,17,17,66,69,17,17,17,17,17,17,]),'bra':([27,37,],[54,54,]),'generator':([1,29,],[5,63,]),'ts_slice':([34,46,25,41,62,6,12,40,48,47,49,42,53,35,39,44,51,50,92,43,52,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'time_index_expression':([94,54,],[105,84,]),'logic_expression':([25,62,6,42,92,],[22,22,22,22,104,]),'number':([34,46,25,41,62,6,12,40,48,47,49,42,53,35,39,44,51,50,92,43,52,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'stmt':([0,],[2,]),'add_expression':([25,41,62,6,48,49,42,53,44,51,50,92,43,52,],[26,71,26,26,78,79,26,83,74,81,80,26,73,82,]),'every_phrase':([5,63,],[11,11,]),'property_access':([34,46,25,41,62,6,12,40,48,47,49,42,53,35,39,44,51,50,92,43,52,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'log_index_expression':([56,102,],[88,110,]),'logical_interval':([27,37,],[58,58,]),'interval':([27,37,],[59,68,]),'expression_list':([6,],[28,]),'pipe':([1,],[7,]),'numeric_interval':([27,37,],[60,60,]),'formal_parameter':([0,1,],[4,8,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> stmt","S'",1,None,None,None),
  ('stmt -> ts_param_id_list pipe','stmt',2,'p_stmt','__pyclasspath__/formula3/ast_parser.py',67),
  ('pipe -> pipe SERPIPE generator','pipe',3,'p_pipe_serial','__pyclasspath__/formula3/ast_parser.py',75),
  ('pipe -> generator','pipe',1,'p_pipe_simple','__pyclasspath__/formula3/ast_parser.py',82),
  ('generator -> generator every_phrase','generator',2,'p_generator_with_every','__pyclasspath__/formula3/ast_parser.py',87),
  ('generator -> STARTGEN expression_list ENDGEN','generator',3,'p_generator','__pyclasspath__/formula3/ast_parser.py',94),
  ('ts_param_id_list -> formal_parameter','ts_param_id_list',1,'p_ts_param_id_list','__pyclasspath__/formula3/ast_parser.py',99),
  ('ts_param_id_list -> ts_param_id_list formal_parameter','ts_param_id_list',2,'p_ts_param_id_list_TS_PARAM_ID','__pyclasspath__/formula3/ast_parser.py',105),
  ('formal_parameter -> TS_PARAM_ID','formal_parameter',1,'p_formal_parameter_undefined','__pyclasspath__/formula3/ast_parser.py',124),
  ('formal_parameter -> TS_PARAM_ID EQUALS STRING','formal_parameter',3,'p_formal_parameter_defined','__pyclasspath__/formula3/ast_parser.py',131),
  ('expression_list -> expression_list SEMICOLON assign_expression','expression_list',3,'p_semicolon','__pyclasspath__/formula3/ast_parser.py',146),
  ('expression_list -> assign_expression','expression_list',1,'p_reduce_assign','__pyclasspath__/formula3/ast_parser.py',154),
  ('assign_expression -> if_expression ASSIGN TS_ID','assign_expression',3,'p_assign','__pyclasspath__/formula3/ast_parser.py',160),
  ('assign_expression -> TS_ID PROPCOPY interval','assign_expression',3,'p_prop_copy','__pyclasspath__/formula3/ast_parser.py',164),
  ('assign_expression -> if_expression','assign_expression',1,'p_reduce_if','__pyclasspath__/formula3/ast_parser.py',173),
  ('if_expression -> logic_expression IF if_expression OTHERWISE logic_expression','if_expression',5,'p_if','__pyclasspath__/formula3/ast_parser.py',179),
  ('if_expression -> logic_expression','if_expression',1,'p_reduce_logic','__pyclasspath__/formula3/ast_parser.py',190),
  ('logic_expression -> logic_expression AND add_expression','logic_expression',3,'p_and','__pyclasspath__/formula3/ast_parser.py',196),
  ('logic_expression -> logic_expression OR add_expression','logic_expression',3,'p_or','__pyclasspath__/formula3/ast_parser.py',200),
  ('logic_expression -> logic_expression XOR add_expression','logic_expression',3,'p_xor','__pyclasspath__/formula3/ast_parser.py',204),
  ('logic_expression -> add_expression GT add_expression','logic_expression',3,'p_gt','__pyclasspath__/formula3/ast_parser.py',216),
  ('logic_expression -> add_expression LT add_expression','logic_expression',3,'p_lt','__pyclasspath__/formula3/ast_parser.py',220),
  ('logic_expression -> add_expression GTE add_expression','logic_expression',3,'p_gte','__pyclasspath__/formula3/ast_parser.py',224),
  ('logic_expression -> add_expression LTE add_expression','logic_expression',3,'p_lte','__pyclasspath__/formula3/ast_parser.py',228),
  ('logic_expression -> add_expression EQ add_expression','logic_expression',3,'p_eq','__pyclasspath__/formula3/ast_parser.py',233),
  ('logic_expression -> add_expression NEQ add_expression','logic_expression',3,'p_neq','__pyclasspath__/formula3/ast_parser.py',237),
  ('logic_expression -> add_expression','logic_expression',1,'p_reduce_add','__pyclasspath__/formula3/ast_parser.py',243),
  ('add_expression -> add_expression PLUS mult_expression','add_expression',3,'p_plus','__pyclasspath__/formula3/ast_parser.py',250),
  ('add_expression -> add_expression MINUS mult_expression','add_expression',3,'p_minus','__pyclasspath__/formula3/ast_parser.py',254),
  ('add_expression -> mult_expression','add_expression',1,'p_reduce_mult','__pyclasspath__/formula3/ast_parser.py',261),
  ('mult_expression -> mult_expression DIVIDE expression','mult_expression',3,'p_div','__pyclasspath__/formula3/ast_parser.py',268),
  ('mult_expression -> mult_expression TIMES expression','mult_expression',3,'p_times','__pyclasspath__/formula3/ast_parser.py',272),
  ('mult_expression -> expression','mult_expression',1,'p_reduce_pow','__pyclasspath__/formula3/ast_parser.py',279),
  ('expression -> expression POW expression','expression',3,'p_pow','__pyclasspath__/formula3/ast_parser.py',285),
  ('expression -> MINUS expression','expression',2,'p_uminus','__pyclasspath__/formula3/ast_parser.py',290),
  ('expression -> number','expression',1,'p_num','__pyclasspath__/formula3/ast_parser.py',298),
  ('expression -> STRING','expression',1,'p_string','__pyclasspath__/formula3/ast_parser.py',302),
  ('expression -> ts_slice','expression',1,'p_ts','__pyclasspath__/formula3/ast_parser.py',306),
  ('expression -> ROUND_BRA if_expression ROUND_KET','expression',3,'p_brackets','__pyclasspath__/formula3/ast_parser.py',311),
  ('expression -> TS_ID ROUND_BRA expression ROUND_KET','expression',4,'p_funccall','__pyclasspath__/formula3/ast_parser.py',326),
  ('ts_slice -> property_access interval','ts_slice',2,'p_slice','__pyclasspath__/formula3/ast_parser.py',351),
  ('number -> FLOAT','number',1,'p_number','__pyclasspath__/formula3/ast_parser.py',366),
  ('number -> INTEGER','number',1,'p_number','__pyclasspath__/formula3/ast_parser.py',367),
  ('property_access -> TS_ID','property_access',1,'p_property_access','__pyclasspath__/formula3/ast_parser.py',377),
  ('property_access -> TS_ID FUNC_OR_ACCESS','property_access',2,'p_property_access','__pyclasspath__/formula3/ast_parser.py',378),
  ('interval -> numeric_interval','interval',1,'p_interval','__pyclasspath__/formula3/ast_parser.py',391),
  ('interval -> logical_interval','interval',1,'p_interval','__pyclasspath__/formula3/ast_parser.py',392),
  ('interval -> time_interval','interval',1,'p_interval','__pyclasspath__/formula3/ast_parser.py',393),
  ('numeric_interval -> SQUARE_BRA INTEGER SQUARE_KET','numeric_interval',3,'p_numeric_interval','__pyclasspath__/formula3/ast_parser.py',398),
  ('logical_interval -> SQUARE_BRA log_index_expression SQUARE_KET','logical_interval',3,'p_logical_interval_simple','__pyclasspath__/formula3/ast_parser.py',403),
  ('time_interval -> bra time_index_expression ket','time_interval',3,'p_time_interval_simple','__pyclasspath__/formula3/ast_parser.py',410),
  ('logical_interval -> SQUARE_BRA log_index_expression DOTDOT log_index_expression SQUARE_KET','logical_interval',5,'p_logical_interval_range','__pyclasspath__/formula3/ast_parser.py',424),
  ('time_interval -> bra time_index_expression DOTDOT time_index_expression ket','time_interval',5,'p_time_interval_range','__pyclasspath__/formula3/ast_parser.py',432),
  ('bra -> SQUARE_BRA','bra',1,'p_BRA','__pyclasspath__/formula3/ast_parser.py',442),
  ('bra -> SQUARE_KET','bra',1,'p_BRA','__pyclasspath__/formula3/ast_parser.py',443),
  ('ket -> SQUARE_KET','ket',1,'p_KET','__pyclasspath__/formula3/ast_parser.py',454),
  ('ket -> SQUARE_BRA','ket',1,'p_KET','__pyclasspath__/formula3/ast_parser.py',455),
  ('log_index_expression -> I','log_index_expression',1,'p_log_index_expression','__pyclasspath__/formula3/ast_parser.py',470),
  ('log_index_expression -> I PLUS INTEGER','log_index_expression',3,'p_log_index_expression','__pyclasspath__/formula3/ast_parser.py',471),
  ('log_index_expression -> I MINUS INTEGER','log_index_expression',3,'p_log_index_expression','__pyclasspath__/formula3/ast_parser.py',472),
  ('time_index_expression -> T','time_index_expression',1,'p_time_index_expression','__pyclasspath__/formula3/ast_parser.py',489),
  ('time_index_expression -> T PLUS INT_WITH_TIME','time_index_expression',3,'p_time_index_expression','__pyclasspath__/formula3/ast_parser.py',490),
  ('time_index_expression -> T MINUS INT_WITH_TIME','time_index_expression',3,'p_time_index_expression','__pyclasspath__/formula3/ast_parser.py',491),
  ('every_phrase -> EVERY INT_WITH_TIME','every_phrase',2,'p_every_phrase_not_aligned','__pyclasspath__/formula3/ast_parser.py',513),
  ('every_phrase -> EVERY INT_WITH_TIME AT INT_WITH_TIME','every_phrase',4,'p_every_phrase_aligned','__pyclasspath__/formula3/ast_parser.py',526),
  ('expression -> NONE','expression',1,'p_none','__pyclasspath__/formula3/ast_parser.py',542),
]
